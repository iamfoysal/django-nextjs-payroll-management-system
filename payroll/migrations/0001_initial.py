# Generated by Django 5.2.4 on 2025-07-17 18:45

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BonusType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('calculation_type', models.CharField(choices=[('FIXED', 'Fixed Amount'), ('PERCENTAGE', 'Percentage of Salary'), ('PERFORMANCE', 'Performance Based')], default='FIXED', max_length=12)),
                ('default_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_taxable', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DeductionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('calculation_type', models.CharField(choices=[('FIXED', 'Fixed Amount'), ('PERCENTAGE', 'Percentage of Salary')], default='FIXED', max_length=10)),
                ('default_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_mandatory', models.BooleanField(default=False)),
                ('is_taxable', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TaxSlab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('min_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('tax_rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('is_active', models.BooleanField(default=True)),
                ('effective_from', models.DateField()),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['min_amount'],
            },
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_salary', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('hourly_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('total_working_days', models.IntegerField(default=0)),
                ('days_worked', models.IntegerField(default=0)),
                ('days_absent', models.IntegerField(default=0)),
                ('days_on_leave', models.IntegerField(default=0)),
                ('regular_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('gross_salary', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('overtime_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_bonuses', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_deductions', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('net_salary', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('CALCULATED', 'Calculated'), ('APPROVED', 'Approved'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=10)),
                ('calculated_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_payrolls', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payrolls', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-payroll_period__start_date', 'employee__employee_id'],
            },
        ),
        migrations.CreateModel(
            name='PayrollHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATED', 'Created'), ('CALCULATED', 'Calculated'), ('APPROVED', 'Approved'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled'), ('MODIFIED', 'Modified')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('previous_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('payroll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='payroll.payroll')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PayrollPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('period_type', models.CharField(choices=[('MONTHLY', 'Monthly'), ('WEEKLY', 'Weekly'), ('BIWEEKLY', 'Bi-weekly'), ('QUARTERLY', 'Quarterly')], default='MONTHLY', max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('pay_date', models.DateField()),
                ('is_processed', models.BooleanField(default=False)),
                ('is_finalized', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-start_date'],
                'unique_together': {('period_type', 'start_date', 'end_date')},
            },
        ),
        migrations.AddField(
            model_name='payroll',
            name='payroll_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payrolls', to='payroll.payrollperiod'),
        ),
        migrations.CreateModel(
            name='PaySlip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slip_number', models.CharField(max_length=50, unique=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='payslips/')),
                ('emailed_to', models.EmailField(blank=True, max_length=254)),
                ('emailed_at', models.DateTimeField(blank=True, null=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('payroll', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pay_slip', to='payroll.payroll')),
            ],
            options={
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='PayrollBonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('description', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bonus_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll.bonustype')),
                ('payroll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bonuses', to='payroll.payroll')),
            ],
            options={
                'unique_together': {('payroll', 'bonus_type')},
            },
        ),
        migrations.CreateModel(
            name='PayrollDeduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('description', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deduction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll.deductiontype')),
                ('payroll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deductions', to='payroll.payroll')),
            ],
            options={
                'unique_together': {('payroll', 'deduction_type')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='payroll',
            unique_together={('employee', 'payroll_period')},
        ),
    ]
