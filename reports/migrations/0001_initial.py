# Generated by Django 5.2.4 on 2025-07-17 18:45

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
        ('payroll', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('ATTENDANCE', 'Attendance Report'), ('PAYROLL', 'Payroll Report'), ('OVERTIME', 'Overtime Report'), ('LEAVE', 'Leave Report'), ('EMPLOYEE', 'Employee Report'), ('DEPARTMENT', 'Department Report'), ('PERFORMANCE', 'Performance Report'), ('CUSTOM', 'Custom Report')], max_length=12)),
                ('default_format', models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('CSV', 'CSV'), ('JSON', 'JSON')], default='PDF', max_length=5)),
                ('fields_to_include', models.JSONField(default=list)),
                ('filters', models.JSONField(default=dict)),
                ('grouping', models.JSONField(default=dict)),
                ('sorting', models.JSONField(default=dict)),
                ('is_public', models.BooleanField(default=False)),
                ('allowed_roles', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly')], max_length=10)),
                ('email_recipients', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('next_run_date', models.DateTimeField()),
                ('last_run_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employee_recipients', models.ManyToManyField(blank=True, related_name='scheduled_reports', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='reports.reporttemplate')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('additional_filters', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=10)),
                ('format', models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('CSV', 'CSV'), ('JSON', 'JSON')], max_length=5)),
                ('file_path', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('total_records', models.IntegerField(default=0)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('download_count', models.IntegerField(default=0)),
                ('last_downloaded_at', models.DateTimeField(blank=True, null=True)),
                ('departments', models.ManyToManyField(blank=True, to='employees.department')),
                ('employees', models.ManyToManyField(blank=True, related_name='reports', to=settings.AUTH_USER_MODEL)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='reports.reporttemplate')),
            ],
            options={
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='AttendanceAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('total_working_days', models.IntegerField(default=0)),
                ('days_present', models.IntegerField(default=0)),
                ('days_absent', models.IntegerField(default=0)),
                ('days_on_leave', models.IntegerField(default=0)),
                ('days_late', models.IntegerField(default=0)),
                ('total_hours_worked', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('regular_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('average_daily_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('attendance_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('punctuality_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_analytics', to='employees.department')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-year', '-month', 'employee__employee_id'],
                'unique_together': {('employee', 'year', 'month')},
            },
        ),
        migrations.CreateModel(
            name='DepartmentAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('total_employees', models.IntegerField(default=0)),
                ('active_employees', models.IntegerField(default=0)),
                ('new_hires', models.IntegerField(default=0)),
                ('terminations', models.IntegerField(default=0)),
                ('average_attendance_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('average_punctuality_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('total_overtime_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_payroll_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('average_salary', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_overtime_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_leave_days', models.IntegerField(default=0)),
                ('average_leave_per_employee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department_analytics', to='employees.department')),
            ],
            options={
                'ordering': ['-year', '-month', 'department__name'],
                'unique_together': {('department', 'year', 'month')},
            },
        ),
        migrations.CreateModel(
            name='PayrollAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_salary', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('gross_salary', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('net_salary', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('overtime_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_bonuses', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_deductions', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('cost_per_hour', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('overtime_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_analytics', to='employees.department')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_analytics', to=settings.AUTH_USER_MODEL)),
                ('payroll_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='payroll.payrollperiod')),
            ],
            options={
                'ordering': ['-payroll_period__start_date', 'employee__employee_id'],
                'unique_together': {('employee', 'payroll_period')},
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('quarter', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('attendance_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('punctuality_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('overtime_efficiency', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Ratio of overtime hours to regular productivity', max_digits=5)),
                ('leave_to_productivity_ratio', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Impact of leave on productivity', max_digits=5)),
                ('overall_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('performance_grade', models.CharField(blank=True, choices=[('A+', 'Excellent (90-100)'), ('A', 'Very Good (80-89)'), ('B+', 'Good (70-79)'), ('B', 'Satisfactory (60-69)'), ('C', 'Needs Improvement (50-59)'), ('D', 'Poor (Below 50)')], max_length=2)),
                ('manager_comments', models.TextField(blank=True)),
                ('improvement_areas', models.JSONField(default=list)),
                ('strengths', models.JSONField(default=list)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_performances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-year', '-quarter', 'employee__employee_id'],
                'unique_together': {('employee', 'year', 'quarter')},
            },
        ),
    ]
